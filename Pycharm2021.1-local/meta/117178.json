{"id":117178,"xmlId":"com.illuminatedcloud2.intellij","name":"Illuminated Cloud 2","description":"\n        <p>\n            <b>Illuminated Cloud</b> brings the modern feature set of JetBrains' powerful IDEs to Salesforce\n            development. Illuminated Cloud not only saves you time with its <b>intelligent auto-completion</b> for all\n            Salesforce programming languages and metadata types, but it also <b>recognizes issues</b> in your code and\n            <b>offers suggestions</b> for how to correct them. With Illuminated Cloud's <b>refactoring</b> capabilities,\n            you'll be able to <b>own and evolve</b> your Salesforce code base like never before.\n        </p>\n        <p>\n            Illuminated Cloud provides full support for <b>traditional</b> and <b>Salesforce DX</b> development\n            models—against both scratch orgs and non-scratch orgs—allowing you to flow seamlessly between\n            the various\n            models in a single tool. Because Illuminated Cloud extends JetBrains' powerful IDEs, you can leverage their\n            extensive capabilities including best-in-class Web application development features (commercial IDEs only),\n            seamless <b>version control integration</b>, and first-class integrations with <b>task management</b> and\n            <b>bug tracking</b> systems.\n        </p>\n        <p>\n            Illuminated Cloud dramatically simplifies development and deployment of <b>Apex</b>, <b>Visualforce</b>,\n            <b>Lightning (Aura and LWC)</b>, and other Salesforce metadata types with modern IDE features such as:\n        </p>\n\n        <ul>\n            <li>Intelligent Code Completion and Time-Saving Live Templates</li>\n            <li>Extensive Source Code Navigation and Cross-Referencing</li>\n            <li>Refactoring</li>\n            <li>Code Inspections and Intentions</li>\n            <li>Intelligent Source Code Generation</li>\n            <li>Content Type-Aware Static Resource Management and Static Resource Bundles</li>\n            <li>Integrated API Documentation and ApexDoc Support</li>\n            <li>Configurable Source Code Formatters</li>\n            <li>Template-Based Source File Creation</li>\n            <li>Full Salesforce DX Support</li>\n            <li>Offline Apex Debugger</li>\n            <li>Integrated Apex Unit Test Execution and Code Coverage Analysis</li>\n            <li>Anonymous Apex/SOQL Query Execution and Apex Log Analyzer</li>\n            <li>Powerful Connection Management</li>\n            <li>Offline Symbol Table Generation</li>\n            <li>Flexible and Efficient Metadata Management</li>\n        </ul>\n\n        Note that Illuminated Cloud is a <a href=\"http://www.illuminatedcloud.com/purchase\">commercial offering</a> and\n        requires an active annual subscription-based license for continued access to its features.\n        ","tags":["Languages"],"vendor":"Rose Silver Software","version":"2.1.7.2","notes":"\n        <p><b>2.1.7.2</b></p>\n        <ul>\n            <li><b>Issue 1147</b> - Fixed an Apex parser issue with ternary expressions when the true branch is an\n                assignment expression. This also fixed an issue with proper associativity of nested ternary expression\n                branches.\n            </li>\n            <li><b>Issues 1627 and 1799 (likely others)</b> - Fixed all known issues with resolution of ambiguous type\n                names for which the intended type must be derived contextually, e.g., <code>System.Site</code> and\n                <code>Schema.Site</code> which both exist in implicit namespaces and may be referenced as simply\n                <code>Site</code>. In order to do this properly, I finally corrected a long-standing issue with the\n                layout of non-namespaced SObject stub classes in the OST by moving them from the root/empty namespace\n                into the <code>Schema</code> namespace.<br>\n                <br>\n                <b>NOTE:</b> This <b>requires</b> that <b>all</b> OSTs be regenerated as the associated type resolution\n                fixes depend on this relocation of SObjects with no explicit specified namespace. Failure to do so will\n                result in issues with code completion, reference resolution, and code inspection false positives where\n                references to these types are found. I apologize for requiring regeneration of all OSTs, but in this\n                case it's motivated by a change to the OST that correctly represents the underlying SObject type system.\n            </li>\n            <li><b>Issue 1863</b> - Fixed an issue with camel cased-to-kebab-cased conversion of names containing\n                multiple adjacent capital letters.\n            </li>\n            <li>Related to the OST change above, the module validation notification now provides more detailed\n                information when an OST is found to be out-of-date. It now includes descriptions of the actual changes\n                to the OST and the relative importance of regenerating the OST based on each of these changes. For\n                example, changes that enrich or slightly correct the OST but wouldn't likely affect most users result in\n                recommended OST regeneration; those that fundamentally change the OST layout such as the one in this\n                update to reorganize certain SObjects into the <code>Schema</code> namespace result in required OST\n                regeneration. This should help users to understand the impact of regenerating vs. not regenerating their\n                OSTs after taking an update that results in this type of module validation notification.\n            </li>\n            <li>Fixed an issue that would result in unmodified loaded scratch org definition files being written,\n                possibly resulting in the file being reformatted.\n            </li>\n            <li>Other related fixes and enhancements.</li>\n        </ul>\n        ","optionalDependencies":["com.intellij.modules.java","com.jetbrains.php","com.intellij.modules.python","com.intellij.modules.ruby","com.intellij.modules.webstorm","com.intellij.copyright","com.intellij.modules.coverage","com.intellij.css","JavaScript","org.jetbrains.plugins.textmate"],"since":"202.0","size":21457986}