{"id":117254,"xmlId":"com.koxudaxi.pydantic","name":"Pydantic","description":"\n    <p>This plugin provides autocompletion support for <a href=\"https://github.com/samuelcolvin/pydantic\">pydantic</a></p>\n    <h2>Help</h2>\n    <p>See <a href=\"https://koxudaxi.github.io/pydantic-pycharm-plugin/\">documentation</a> for more details.</p>\n    <h2>Features</h2>\n\n    <ul>\n        <li>pydantic.BaseModel\n            <ul>\n               <li>Model-specific __init__-signature inspection and autocompletion for subclasses of pydantic.BaseModel</li>\n               <li>Model-specific __init__-arguments type-checking for subclasses of pydantic.BaseModel</li>\n               <li>Refactor support for renaming fields for subclasses of BaseModel</li>\n               <li>(If the field name is refactored from the model definition or __init__ call keyword arguments, PyCharm will present a dialog offering the choice to automatically rename the keyword where it occurs in a model initialization call.</li>\n               <li>Search related-fields by class attributes and keyword arguments of __init__. with Ctrl+B and Cmd+B</li>\n               <li>Provide an inspection for type-checking which is compatible with pydantic. the inspection supports parsable-type. the detail is at <a href=\"https://koxudaxi.github.io/pydantic-pycharm-plugin/type-checking/\"> Inspection for type-checking section</a></li>\n               <li>Insert unfilled arguments with a QuickFix for subclasses of pydantic.BaseModel</li>\n               <li>Support typing.Annotated (PEP 593)</li>\n               <li>Regex arguments in `Field` and `constr` are treated as Python's regex string literals </li>\n\n            </ul>\n         </li>\n        <li>pydantic.dataclasses.dataclass\n            <ul>\n                <li>Support same features as pydantic.BaseModel\n                    </li><li>(After PyCharm 2020.1 and this plugin version 0.1.0, PyCharm treats pydantic.dataclasses.dataclass as third-party dataclass.</li>\n                    <li>Exclude a feature which is inserting unfilled arguments with a QuickFix</li>\n                \n            </ul>\n        </li>\n    </ul>\n    ","tags":["Inspection"],"vendor":"Koudai Aono @koxudaxi","version":"0.3.0","notes":"\n    <h2>version 0.3.0</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support extra init args on baseSetting [#276]</li>\n        <li>Support PyCharm 2021.1 [#273]</li>\n        <li>Improve supporting dynamic model [#271]</li>\n    </ul>\n    <h2>version 0.2.1</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support regex (Field, constr) [#262]</li>\n    </ul>\n    <h2>version 0.2.0</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Support `import typing` [#258]</li>\n        <li>Fix DisposalException [#252]</li>\n        <li>Support Annotated [#241]</li>\n    </ul>\n    <h2>version 0.1.20</h2>\n    <p>Features</p>\n    <ul>\n        <li>Show Field() as parameter info for a default value when set default_factory [#240]</li>\n    </ul>\n    <h2>version 0.1.19</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix custom root inspection [#232]</li>\n    </ul>\n    <h2>version 0.1.18</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support custom root field [#227]</li>\n    </ul>\n    <h2>version 0.1.17</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support keep_untouched[#216]</li>\n    </ul>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix build warning [#217]</li>\n    </ul>\n    <h2>version 0.1.16</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix inserting argument [#204]</li>\n    </ul>\n     <h2>version 0.1.15</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix config service error [#202]</li>\n    </ul>\n    <h2>version 0.1.14</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix detecting validators decorated methods [#196]</li>\n        <li>Remove stub deletion error [#190]</li>\n    </ul>\n    <h2>version 0.1.13</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support ClassVar [#188]</li>\n    </ul>\n    <h2>version 0.1.12</h2>\n    <p>Features</p>\n    <ul>\n        <li>Improve build config [#180]</li>\n    </ul>\n    <h2>version 0.1.11</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support dynamic model [#175]</li>\n    </ul>\n    <h2>version 0.1.10</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix inserting arguments [#160]</li>\n    </ul>\n    <h2>version 0.1.9</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix compatibility issues [#145] </li>\n    </ul>\n    <h2>version 0.1.8</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support inserting arguments [#144] </li>\n    </ul>\n    <h2>version 0.1.7</h2>\n    <p>Features</p>\n    <ul>\n        <li>Update jvm version [#133] </li>\n    </ul>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix handling project [#137] </li>\n        <li>Fix invalid cache for pydantic version [#132] </li>\n        <li>Fix invalid completion in callable expression [#130] </li>\n    </ul>\n    <h2>version 0.1.6</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support conlist [#129] </li>\n        <li>Fix acceptable types for collections [#127] </li>\n        <li>Improve initializer and add package manager listener [#126] </li>\n        <li>Fix invalid self parameter when inherits from non-pydantic model [#125] </li>\n        <li>Add mock sdk for unittest [#124] </li>\n        <li>Fix types of methods and functions [#123] </li>\n    </ul>\n    <h2>version 0.1.5</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support a collection on parsable-type and acceptable-type [#120] </li>\n    </ul>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix an error when project is disposed [#121] </li>\n        <li>Fix type-map edge case for parsable-type and acceptable-type [#118]</li>\n    </ul>\n    <h2>version 0.1.4</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix type provider for dataclass [#114] </li>\n    </ul>\n    <p>Features</p>\n    <ul>\n        <li>Support mypy.ini [#110] </li>\n    </ul>\n    <h2>version 0.1.3</h2>\n    <p>Features</p>\n    <ul>\n        <li>Add documents and link to documents [#105, #106, #107, #108] </li>\n        <li>Support acceptable type [#104] </li>\n        <li>Support parsable type highlight level [#103] </li>\n    </ul>\n    <h2>version 0.1.2</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix type checker [#102] </li>\n        <li>Fix an invalid warning when a field type is any [#101] </li>\n        <li>Fix plugin build settings [#100] </li>\n    </ul>\n    <h2>version 0.1.1</h2>\n    <p>Features</p>\n    <ul>\n        <li> Support parsable type [#96] </li>\n    </ul>\n    <h2>version 0.1.0</h2>\n    <p>Features</p>\n    <ul>\n        <li> PyCharm treats pydantic.dataclasses.dataclass as third-party dataclass. [#98] </li>\n    </ul>\n    <h2>version 0.0.30</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix invalid warn on no public attribute [#95] </li>\n    </ul>\n    <h2>version 0.0.29</h2>\n    <p>Features</p>\n    <ul>\n        <li>Inspect untyped fields [#93] </li>\n        <li>Add config panel [#92] </li>\n    </ul>\n    <h2>version 0.0.28</h2>\n    <p>Features, BugFixes</p>\n    <ul>\n        <li>Support positional arguments for dataclasses [#91] </li>\n        <li>Fix field names treated with incorrect scope [#90] </li>\n    </ul>\n    <h2>version 0.0.27</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support to inspect read-only property [#86] </li>\n    </ul>\n    <h2>version 0.0.26</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support to inspect from_orm [#85] </li>\n        <li>Improve to handle Config  [#85] </li>\n    </ul>\n    <h2>version 0.0.25</h2>\n    <p>Features</p>\n    <ul>\n        <li>Add auto-completion for config fields [#84] </li>\n        <li>Support allow_population_by_field_name [#82] </li>\n    </ul>\n    <h2>version 0.0.24</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix inspection on namedtuple [#81] </li>\n    </ul>\n    <h2>version 0.0.23</h2>\n    <p>Features</p>\n    <ul>\n        <li>Ignore protected and private fields [#79] </li>\n    </ul>\n    <h2>version 0.0.22</h2>\n    <p>Features, BugFixes</p>\n    <ul>\n        <li>Fix first parameter type of a validator method [#76] </li>\n        <li>Fix auto-completion for Fields [#75] </li>\n        <li>Improve to insert validate methods [#74] </li>\n    </ul>\n    <h2>version 0.0.21</h2>\n    <p>Features, BugFixes</p>\n    <ul>\n        <li>Support root_validator [#72] </li>\n        <li>Support Field for v1 [#71, #73] </li>\n    </ul>\n    <h2>version 0.0.20</h2>\n    <p>Features, BugFixes</p>\n    <ul>\n        <li>Support all features by parameters [#67] </li>\n        <li>Fix to handle models which have __init__ or __new__ methods [#67] </li>\n    </ul>\n    <h2>version 0.0.19</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix wrong warning message for cls initialization [#66] </li>\n    </ul>\n    <h2>version 0.0.18</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support alias on Schema [#64] </li>\n    </ul>\n    <h2>version 0.0.17</h2>\n    <p>BugFixes</p>\n    <ul>\n        <li>Fix removing fields on non-subclasses of pydantic.BaseModel and pydantic.dataclasses.dataclass [#62] </li>\n    </ul>\n    <h2>version 0.0.16</h2>\n    <p>Features, BugFixes</p>\n    <ul>\n        <li>Remove fields on auto-completion of subclasses of pydantic.BaseModel and pydantic.dataclasses.dataclass [#61] </li>\n        <li>Change default value \"...\" to None on auto-completion [#60] </li>\n        <li>Add types and default values to popup of auto-completion [#54] </li>\n        <li>Fix class imported path on auto-completion [#54] </li>\n    </ul>\n    <h2>version 0.0.15</h2>\n    <p>Features</p>\n    <ul>\n        <li>Improve autocompletion for signature subclasses of pydantic.BaseModel and pydantic.dataclasses.dataclass [#51] </li>\n        <li>Update kotlin version to 1.3.50  [#50] </li>\n        <li>Support to detect types by default value on Schema [#49] </li>\n        <li>Improve inner logic [#47, #52] </li>\n    </ul>\n    <h2>version 0.0.14</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support default values [#46] </li>\n        <li>Ignore warning for self argument with @validator [#45] </li>\n        <li>Support pydantic.dataclasses.dataclass [#43] </li>\n        <li>Search related-fields by class attributes and keyword arguments of __init__. with Ctrl+B and Cmd+B [#42] </li>\n    </ul>\n    <h2>version 0.0.13</h2>\n    <p>Features, BugFixes</p>\n    <ul>\n        <li>Fix to check a type of fields without a type-hint [#39] </li>\n        <li>No arguments required for BaseSettings [#38] </li>\n    </ul>\n    <h2>version 0.0.12</h2>\n    <p>Features</p>\n    <ul>\n        <li>Support refactoring fields by a keyword argument [#34] </li>\n        <li>Support refactoring super-classes and inheritor-classes [#34] </li>\n        <li>Support ellipsis(...) in fields [#34] </li>\n        <li>Support Schema in fields [#31] </li>\n    </ul>\n    ","dependencies":["com.intellij.modules.lang","PythonCommon","com.intellij.modules.python"],"since":"211.6693.111","sourceCodeUrl":"https://github.com/koxudaxi/pydantic-pycharm-plugin","size":2374059,"url":"https://github.com/koxudaxi/pydantic-pycharm-plugin"}